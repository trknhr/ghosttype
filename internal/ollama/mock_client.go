// Code generated by MockGen. DO NOT EDIT.
// Source: internal/ollama/ollama_client.go

// Package ollama is a generated GoMock package.
package ollama

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockOllamaClient is a mock of OllamaClient interface.
type MockOllamaClient struct {
	ctrl     *gomock.Controller
	recorder *MockOllamaClientMockRecorder
}

// MockOllamaClientMockRecorder is the mock recorder for MockOllamaClient.
type MockOllamaClientMockRecorder struct {
	mock *MockOllamaClient
}

// NewMockOllamaClient creates a new mock instance.
func NewMockOllamaClient(ctrl *gomock.Controller) *MockOllamaClient {
	mock := &MockOllamaClient{ctrl: ctrl}
	mock.recorder = &MockOllamaClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockOllamaClient) EXPECT() *MockOllamaClientMockRecorder {
	return m.recorder
}

// Embed mocks base method.
func (m *MockOllamaClient) Embed(text string) (*OllamaEmbedResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Embed", text)
	ret0, _ := ret[0].(*OllamaEmbedResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Embed indicates an expected call of Embed.
func (mr *MockOllamaClientMockRecorder) Embed(text interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Embed", reflect.TypeOf((*MockOllamaClient)(nil).Embed), text)
}

// Generate mocks base method.
func (m *MockOllamaClient) Generate(prompt string) (*OllamaCompleteResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Generate", prompt)
	ret0, _ := ret[0].(*OllamaCompleteResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Generate indicates an expected call of Generate.
func (mr *MockOllamaClientMockRecorder) Generate(prompt interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Generate", reflect.TypeOf((*MockOllamaClient)(nil).Generate), prompt)
}
